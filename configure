#!/bin/bash
# set -u
function error () { printf >&2 "%s\n\nPlease see README.md for build instructions.\n" "$1"; exit 1; }

# ===============================
# = Check required dependencies =
# ===============================

echo -ne "Dependencies...\r"
for dep in capnp ninja ragel multimarkdown pgrep pkill; do
	which -s "$dep" || error "*** dependency missing: ‘${dep}’."
done
echo "Dependencies... ok."

if [[ -e local.rave ]]; then
	echo >&2 "Skipping writing ‘local.rave’: File already exists"
else
	echo >> local.rave 'add FLAGS    "-I/usr/local/include"'
	echo >> local.rave 'add FLAGS    "-I/opt/homebrew/include"'
	echo >> local.rave 'add LN_FLAGS "-L/usr/local/lib"'
	echo >> local.rave 'add LN_FLAGS "-L/opt/homebrew/lib"'


	echo -ne "Headers...\r"
	for hdr in boost/{crc,variant}.hpp capnp/{message,serialize-packed}.h sparsehash/dense_hash_map; do
		test -f "/usr/local/include/${hdr}" || \
		test -f "/opt/homebrew/include/${hdr}" || \
		error "*** dependency missing: ‘${hdr}’. Install dependency and/or update ‘local.rave’ with correct path."
	done
	echo "Headers... ok."

	echo -ne "Libraries...\r"
	for lib in capnp kj; do
	    shopt -s nullglob

	    files=(/usr/local/lib/lib${lib}.* /opt/homebrew/lib/lib${lib}.*)

	    if [ ${#files[@]} -eq 0 ]; then
	        error "*** dependency missing: ‘lib${lib}.*’. Install dependency and/or update ‘local.rave’ with correct path."
	    fi
	    
	    shopt -u nullglob
	done
	echo "Libraries... ok."
fi

# ========================
# = Generate build files =
# ========================

if [[ -d "$builddir" ]]; then 
	bin/rave -crelease -tTextMate -b"$builddir"
else 
	bin/rave -crelease -tTextMate
fi
